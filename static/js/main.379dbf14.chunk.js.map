{"version":3,"sources":["services/authService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/Heart.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/moviesTable.jsx","components/common/ListGroup.jsx","components/common/Pagination.jsx","components/common/searchBox.jsx","components/Movies.js","utils/paginate.js","components/navbar.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/LoginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["endPointUrl","config","apiEndPoint","tokenKey","email","password","a","httpService","post","jwt","data","localStorage","setItem","login","logout","removeItem","loginWithJwt","getJwt","getItem","getCurrentUser","jwtDecode","e","console","log","instance","axios","create","baseURL","timeout","headers","authService","interceptors","response","use","error","status","toast","Promise","reject","get","put","delete","movieUrl","id","deleteMovie","movie","_id","saveMovie","body","getGenres","Heart","classes","this","props","liked","onClick","style","cursor","className","aria-hidden","Component","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","map","key","label","TableBody","renderCell","item","content","_","createKey","Table","MoviesTable","Link","to","title","onLike","deleteColumn","type","onDelete","user","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","name","placeholder","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filteredMovies","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","marginBottom","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Customers","Rentals","NotFound","Input","rest","htmlFor","Select","options","option","Form","errors","handleChange","input","errorMessage","validateProperty","validate","Joi","schema","abortEarly","details","message","obj","handleSubmit","preventDefault","doSubmit","renderInput","renderSelect","renderButton","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","populateGenres","populateMovie","movieId","match","params","mapToViewModel","replace","onSubmit","LoginForm","username","location","window","from","pathname","RegisterForm","Logout","ProtectedRoute","component","render","Route","Redirect","App","Fragment","Switch","exact","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.379dbf14.chunk.js","sourcesContent":["import httpService from \"./httpService\";\nimport config from \"../config\";\nimport jwtDecode from \"jwt-decode\";\n\nconst endPointUrl = config.apiEndPoint + \"/auth\";\nconst tokenKey = \"token\";\n\nexport async function login(email, password){\n  const {data: jwt} = await httpService.post(endPointUrl, {email, password});\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport function logout(){\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser(){\n  try{\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  }catch (e) {\n    console.log(\"Exception: \" + e);\n    return null;\n  }\n}\n\nexport default {\n  login,\n  logout,\n  loginWithJwt,\n  getJwt,\n  getCurrentUser\n}","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport authService from \"./authService\";\n\nconst instance = axios.create({\n  baseURL: 'https://localhost:3900',\n  timeout: 1000,\n  headers: {'x-auth-token': authService.getJwt()}\n});\n\ninstance.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    toast(\"something unexpected happened\");\n    console.log(\"Unexpected error:\", error);\n  }\n  return Promise.reject(error);\n});\n\nexport default {\n  get: instance.get,\n  post: instance.post,\n  put: instance.put,\n  delete: instance.delete\n};","import httpService from \"./httpService\";\nimport config from \"../config\";\n\nconst endPointUrl = config.apiEndPoint + \"/movies\";\n\nfunction movieUrl(id){\n  return `${endPointUrl}/${id}`;\n}\n\nexport function getMovies(){\n  return httpService.get(endPointUrl);\n}\n\nexport function getMovie(id) {\n  return httpService.get(movieUrl(id));\n}\n\nexport function deleteMovie(movie) {\n  return httpService.delete(movieUrl(movie._id));\n}\n\nexport function saveMovie(movie) {\n  if(movie._id){\n    const { body } = {...movie};\n    delete body._id;\n    return httpService.put(movieUrl(movie._id), body);\n  }\n\n  return httpService.post(endPointUrl, movie);\n}","import httpService from \"./httpService\";\nimport config from \"../config\";\n\nexport function getGenres(){\n  return httpService.get(config.apiEndPoint + \"/genres\");\n}\n","import React, { Component } from \"react\";\n\n// Input: liked: boolean\n// Output: onClick\n\nclass Heart extends Component {\n  render() {\n    let classes = \"fa fa-heart\";\n    if (!this.props.liked) classes += \"-o\";\n    return <i onClick={this.props.onClick} style={{ cursor: \"pointer\"}} className={classes} aria-hidden=\"true\" />;\n  }\n}\n\nexport default Heart;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const {sortColumn} = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) {\n      return column.content(item);\n    }\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import Heart from \"./Heart\";\nimport React, { Component } from \"react\";\nimport Table from \"./table\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../../services/authService\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Heart liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-sm\"\n        onClick={() => this.props.onDelete(movie)}\n      >\n        Delete\n      </button>\n    )\n  };\n\n  constructor(){\n    super();\n    const user = authService.getCurrentUser();\n    if(user && user.isAdmin){\n      this.columns.push(this.deleteColumn);\n    }\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        sortColumn={sortColumn}\n        onSort={onSort}\n        data={movies}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n          onClick={() => onItemSelect(item)}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange}) => {\n  console.log(currentPage);\n\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n\n  if(pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n  // [1, 2, 3].map()\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li key={page} className={ page === currentPage ? \"page-item active\" : \"page-item\"}>\n            <span className=\"page-link\" onClick={() => onPageChange(page)}>{page}</span>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search..\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { deleteMovie, getMovies } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport MoviesTable from \"./common/moviesTable\";\nimport ListGroup from \"./common/ListGroup\";\nimport Pagination from \"./common/Pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/searchBox\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie);\n    } catch (e) {\n      if (e.response && e.response.status === 404) {\n        toast(\"This movie has already been deleted\");\n      }\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filteredMovies = allMovies;\n    if (searchQuery) {\n      filteredMovies = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else if (selectedGenre && selectedGenre._id) {\n      filteredMovies = allMovies.filter(m => m.genre._id === selectedGenre._id);\n    }\n\n    const sortedMovies = _.orderBy(\n      filteredMovies,\n      [sortColumn.path],\n      [sortColumn.order]\n    );\n\n    const movies = paginate(sortedMovies, currentPage, pageSize);\n\n    return { totalCount: filteredMovies.length, movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      genres,\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery,\n      selectedGenre\n    } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <p> there are no movies in the database. </p>;\n\n    const { totalCount, movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={genres}\n            selectedItem={selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <p>Showing {totalCount} movies in the database </p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React, { Fragment } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst Navbar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link \" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && (\n            <Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </Fragment>\n          )}\n          {user && (\n            <Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        {...rest}\n        id={name}\n        name={name}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) {\n      errors[input.name] = errorMessage;\n    } else {\n      delete errors[input.name];\n    }\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n    this.validateProperty(input);\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n\n    // eslint-disable-next-line no-unused-vars\n    for (let item of error.details) {\n      errors[item.path[0]] = item.message;\n    }\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const schema = { [name]: this.schema[name] };\n    const obj = { [name]: value };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) {\n      return;\n    }\n\n    this.doSubmit();\n  };\n\n  renderInput = (name, label, type = \"text\") => {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]}\n        type={type}\n      />\n    );\n  };\n\n  renderSelect = (name, label, options) => {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  };\n\n  renderButton = label => {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  };\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getGenres } from \"../services/genreService\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"NumberInStock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"dailyRentalRate\")\n  };\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (e) {\n      if (e.response && e.response.status === 404) {\n        this.props.history.replace(\"/not-found\");\n      }\n    }\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genre: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number In Stock\")}\n          {this.renderInput(\"dailyRentalRate\", \"dailyRentalRate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport authService from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string().required()\n  };\n\n  doSubmit = async () => {\n    try {\n      const { username, password } = this.state.data;\n      await authService.login(username, password);\n\n      const {state} = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (e) {\n      if (e.response && e.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = e.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import httpService from \"./httpService\";\nimport config from \"../config\";\n\nconst endPointUrl = config.apiEndPoint + \"/users\";\n\nexport function register(user) {\n  return httpService.post(endPointUrl, { email: user.username, password: user.password, name: user.name });\n}\n","import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport * as userService from \"../services/userService\";\nimport authService from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .email()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .min(5)\n      .required()\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      authService.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location=\"/\";\n    } catch (e) {\n      if (e.response && e.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = e.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import { Component } from \"react\";\nimport authService from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    authService.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport authService from \"../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        if (!authService.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/Movies\";\nimport Navbar from \"./components/navbar\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport authService from \"./services/authService\";\nimport ProtectedRoute from \"./components/protectedRoute\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    try {\n      const user = authService.getCurrentUser();\n      this.setState({ user });\n    } catch (e) {}\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}